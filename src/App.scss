$backgroundColor: #f8f8f9;
$borderColor: #e6e6e6;
$baseItemHeight: 33px;
.cart {
  display: flex;
  flex-flow: column;
  &-item:first-of-type {
    border-top: 1px solid $borderColor;
  }
  &-item:hover {
    filter: brightness(0.97);
    transition: all 0.2s ease-in;
  }
  &-item {
    height: $baseItemHeight;
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 5px 15px;
    border-bottom: 1px solid $borderColor;

    background-color: $backgroundColor;
    transition: all 0.4s ease-out;
    &--name {
      width: 40%;
    }
    &--amount {
      display: flex;
      flex-flow: row;
      &__input {
        font-size: 17px;
        height: 20px;
        width: 53px;
        padding: 5px;
        text-align: center;
      }
    }
    &--price {
      &__sum {
        font-weight: bold;
      }
    }
    &--del {
      &__button {
        font-size: 15px;
        font-weight: bold;
        color: #b71111;
      }
    }
  }
  &-extraItem {
    &--name,
    &--price {
      color: gray;
    }
  }
  &-sum {
    display: flex;
    flex-flow: row;
    justify-content: space-between;
    padding: 15px;
    background-color: #cecdc5;
    &--sumWord {
      width: 40%;
      font-weight: bold;
    }
  }
}
.deliveryAndPay {
  display: flex;
  flex-flow: row;
}
.deliveryChoice,
.paymentChoice {
  padding: 15px;
}
.vertical {
  display: flex;
  flex-flow: column;
}
.hidden {
  display: none;
}
.elemsToRow {
  display: flex;
  flex-flow: row;
}
.formBlock {
  width: 350px;
}
.stdPadding {
  padding: 15px;
}
.formSubmit {
  font-size: 19px;
  padding: 5px 35px;
  border: none;
  cursor: pointer;
  min-width: 180px;
  &--ready {
    background-color: rgb(108, 205, 108);
  }
  &--notReady {
    background-color: rgb(112, 160, 242);
  }
  &--submitting {
    background-color: gray;
  }
}
.inputLine {
  padding: 3px;
  width: 100%;
  max-width: 300px;
  margin: 4px 0px;
}
.labelToInput {
  display: block;
  width: 100%;
  text-align: left;
  margin-right: 10px;
  font-weight: bold;
  font-size: 13px;
  padding-bottom: 3px;
}
.input {
  border: 1px solid #bbbbbb;
  transition: all 0.2s ease-in;
  padding: 8px 10px;
  border-radius: 2px;
  font-size: 16px;
  width: 100%;
  box-sizing: border-box;
  &:focus {
    outline: 0px;
    box-shadow: 0 1px 1px rgba(20, 93, 226, 0.075),
      0 0 4px rgba(17, 107, 199, 0.6);
    border: 1px solid rgba(82, 144, 236, 0.85);
  }
  &--error {
    outline: 0px;
    box-shadow: 0 1px 1px rgba(0, 0, 0, 0.075), 0 0 4px rgba(236, 82, 82, 0.6) !important;
    border: 1px solid rgba(236, 82, 82, 0.7) !important;
    transition: all 0.2s ease-in;
  }
}
.validation {
  &--error {
    background-color: rgba(236, 82, 82, 1);
    padding: 3px 8px;
    font-size: 14px;
    color: white;
    width: 100%;
    box-sizing: border-box;
    height: 25px;
    transition: height 0.3s ease-out;
  }
  &--empty {
    height: 0px;
    background-color: rgba(236, 82, 82, 1);
    transition: height 0.3s ease-in;
  }
}
/* ----  inputs styling -----*/
$disabledColor: #f3f3f3;
$normalColor: #ccc;
$hoverColor: #999;
$selectedColor: #2196f3;
/* inputs container */
.inputCont {
  display: block;
  position: relative;
  padding-left: 35px;
  margin-bottom: 12px;
  cursor: pointer;
  font-size: 17px;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  &--disabled {
    color: gray;
  }
}
/* Hide the browser's default checkbox */
.inputCont input {
  position: absolute;
  opacity: 0;
  cursor: pointer;
  height: 0;
  width: 0;
}
/* Create a custom checkbox */
.checkmark {
  position: absolute;
  top: 0;
  left: 0;
  height: 20px;
  width: 20px;
  background-color: $normalColor;
  transition: background-color 0.2s ease-out;
  //add border
  border: 2px solid gray;
  width: 16px;
  height: 16px;
}

/* On mouse-over, add a grey background color */
.inputCont:hover input ~ .checkmark {
  background-color: $hoverColor;
}

/* When the checkbox is checked, add a blue background */
.inputCont input:checked ~ .checkmark {
  background-color: $selectedColor;
  transition: background-color 0.3s ease-in;

  height: 20px;
  width: 20px;
  border: none;
}

/* Create the checkmark/indicator (hidden when not checked) */
.checkmark:after {
  content: '';
  position: absolute;
  display: none;
}

/* Show the checkmark when checked */
.inputCont input:checked ~ .checkmark:after {
  display: block;
}

/* Style the checkmark/indicator */
.inputCont .checkmark:after {
  left: 33%;
  top: 17%;
  width: 4px;
  height: 9px;
  border: solid white;
  border-width: 0 3px 3px 0;
  -webkit-transform: rotate(45deg);
  -ms-transform: rotate(45deg);
  transform: rotate(45deg);
}

.radiobtn {
  position: absolute;
  top: 0;
  left: 0;
  height: 20px;
  width: 20px;
  background-color: $normalColor;
  border-radius: 50%;
  transition: all 0.2s ease-out;
  &--disabled {
    background-color: $disabledColor;
  }
}
.inputCont--disabled .radiobtn {
  background-color: $disabledColor;
}

/* On mouse-over, add a grey background color */
.inputCont:hover input ~ .radiobtn {
  background-color: $hoverColor;
}
.inputCont:hover input ~ .radiobtn--disabled,
.inputCont--disabled:hover input ~ .radiobtn {
  background-color: $disabledColor;
}

/* When the radio button is checked, add a blue background */
.inputCont input:checked ~ .radiobtn {
  background-color: $selectedColor;
  transition: all 0.3s ease-in;
}

/* Create the indicator (the dot/circle - hidden when not checked) */
.radiobtn:after {
  content: '';
  position: absolute;
  display: none;
}

/* Show the indicator (dot/circle) when checked */
.inputCont input:checked ~ .radiobtn:after {
  display: block;
}

/* Style the indicator (dot/circle) */
.inputCont .radiobtn:after {
  left: 30%;
  top: 32%;
  width: 8px;
  height: 8px;
  border-radius: 50%;
  background: white;
}
/* -- end inputs styling ----*/
@media only screen and (max-width: 768px) {
  $lineHeight: 34px;
  .cart-item {
    flex-wrap: wrap;
    height: 60px;
    &--name {
      width: 100%;
    }
    &--amount {
      height: $lineHeight;
      &__button {
        width: 45px;
      }
    }
    &--del {
      height: $lineHeight;
    }
  }
  .horizontal-sm {
    flex-flow: row;
  }
}
